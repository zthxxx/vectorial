import path from 'path'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tsconfigPaths from 'vite-tsconfig-paths'
import svgr from 'vite-plugin-svgr'
import { PerfseePlugin } from '@perfsee/rollup'

// https://vitejs.dev/config/
export default defineConfig({
  clearScreen: false,
  server: {
    open: true,
    proxy: {
      // Proxying websockets or socket.io:
      // ws://${host}/socket.io -> ws://localhost:5174/socket.io
      '/socket.io': {
        // dev websocket server in `packages/simple-server`
        target: 'ws://localhost:2234',
        ws: true,
      },
    }
  },

  plugins: [
    tsconfigPaths(),
    react({
      fastRefresh: false,
      babel: {
        plugins: [
          ['@babel/plugin-proposal-decorators', {
            // https://babeljs.io/docs/en/babel-plugin-proposal-decorators#options
            // https://github.com/tc39/proposal-decorators
            version: '2022-03',
          }],
          '@emotion/babel-plugin',
        ],
      },
    }),
    // https://github.com/pd4d10/vite-plugin-svgr
    svgr({
      // https://react-svgr.com/docs/options
      svgrOptions: {
        icon: true,
      },
    }),
    /**
     * analysis building bundle chunk size in local
     * https://perfsee.com/docs/bundle/bundle-report
     */
    PerfseePlugin(),
  ],

  resolve: {
    alias: {
      /**
       * Convert monorepo dependencies to source code compilation, so that automatically trigger HMR when the source code changes
       * Note: The dependencies should be maintained by the `paths`/`references` configuration in `tsconfig` and automatically generated by the vite plugin.
       */
      'vectorial': path.resolve('../vectorial/src'),

      // no need bundle package dependency by paper.js
      'acorn': path.resolve('./src/mock/mock-module'),
    },
  },

  build: {
    minify: true,
    sourcemap: Boolean(process.env.SOURCEMAP),
  },
})
